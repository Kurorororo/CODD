* C++DDOpt

C++ library implement the DDOpt framework.
It has:
- restricted / exact / relax diagrams
- state definition, initial, terminal and state merging functions separated

** Dependencies
You need ~graphviz~ (The ~dot~ binary) to create graph images. It happens
automatically when the ~display~ method is called. Temporary files are created
in ~/tmp~ and the macOS ~open~ command is used (via ~fork/execlp~)  to open the generated
PDF.

** C++ Standard
You need a C++-20 capable compiler. gcc and clang should both work. I work on macOS, os
I use the mainline clang coming with Xcode.

The implementation uses templates and concepts to factor the code.

** Build system
This is ~cmake~. Simply do the following
#+begin_src bash
  mkdir build
  cd build
  cmake ..
  make -j4
#+end_src
And it will compile the whole thing

** Examples
To be found in the ~examples~ folder
- ~coloringtoy~ tiny coloring bench (same as in python)
- ~foo~ maximum independent set (toy size)
- ~tstpoy~ tiny TSP instance (same as in python)
- ~gruler~ golomb ruler (usage <size> <ubOnLabels>)

** Unit test
In the ~test~ folder

** Library
All of it in the ~src~ folder

* Tasks
** DONE Decent set of integer implementation
CLOSED: [2024-01-29 Mon 19:01]
On my own heap.
With template overload that is size dependent (up to label 64, all ops should be O(1))
After that, it should be O(label/64). Unless we start using the 128 bit registers ;-)
** DONE Check and fix leaks (the cache should be deallocated, not _an)
CLOSED: [2024-01-29 Mon 13:46]
** TODO Implement instance reader for tsp to do bigger instances
** TODO Implement instance reader for MISP
** TODO Rename MISP (~foo~) to misptoy ;-)
** TODO Implement an O(1) removal from _an
** DONE Profile and pick up the low hanging fruits 
CLOSED: [2024-01-30 Tue 22:13]
** TODO Fix calls to find in order to remove from _an
- Those should be O(1) via locators.
- Adopt Vec<T> rather than the std::vector<T> for _an
- Create a Vec<T> version that is location aware
- Implement the trick to O(1) removal (affects mergeLayer / truncate)
** TODO Fix calls to find before updateKey in heaps
- Heap is already location aware
- We need to track the location (by node id, we have those)
- Then use the location to have an O(1) operation (affects computeBest & computeBestBackward)
** TODO Change the makeNode / duplicate so that hash is computed only once (not twice).
- Use opaque ADT in Hashtable to support that


* Command to create a GCM for an import :noexport:
Like 
#+begin_src c++
  import iostream;
#+end_src
You need
#+begin_src bash
g++-13 -std=c++20 -fmodules-ts -xc++-system-header iostream
#+end_src
Haven't found a way to automate in cmake yet. Though there should be
