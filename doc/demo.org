#+TITLE: C++DDOopt : The CODD Solver 
#+SETUPFILE: setup.config
#+PROPERTY: header-args :dir ~/Sync/org/tmp  :results drawer :wrap example :exports both
#+INCLUDE: code.inc

* Introduction
We're going to learn a little something about the git data model by crafting the
=.git= directory and a blob object by hand. It'll be fun!

#+begin_src shell :dir . 
  echo "Hello ${SHELL}..."
  git status
  echo "done"
#+end_src

#+RESULTS:
#+begin_example
Hello /bin/zsh...
On branch main
Your branch is up to date with 'origin/main'.

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	modified:   ../examples/misp.cpp

Untracked files:
  (use "git add <file>..." to include in what will be committed)
	../.cache/
	../.vscode/
	./
	../examples/.cache/
	../src/util.hpp.backup

no changes added to commit (use "git add" and/or "git commit -a")
done
#+end_example

* Calling the function?


#+name: hello2
#+begin_src python :results output 
print("How do ya really do?",end='')
#+end_src

#+RESULTS: hello2
#+begin_example
How do ya really do?
#+end_example

Well, what I want to write is "call_hello[:results value raw]()" directly from org (not working).
